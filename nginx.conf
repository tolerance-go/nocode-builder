# 配置工作进程的数量，通常设置为 CPU 核心数
worker_processes 1;

events {
    # 每个工作进程的最大连接数
    worker_connections 1024;
}

http {
    # 引入 MIME 类型文件，使 Nginx 知道如何处理不同类型的文件
    include mime.types;
    # 设置默认的 MIME 类型
    default_type application/octet-stream;

    # 启用高效文件传输模式
    sendfile on;
    # 设置连接的超时时间
    keepalive_timeout 65;

    # 定义一个上游服务器池，命名为 admin，包含一个服务器
    upstream admin {
        server admin:80;
    }

    # 定义另一个上游服务器池，命名为 server，包含一个服务器
    upstream server {
        server server:3000;
    }

    # 定义一个服务器块，处理 HTTP 请求
    server {
        # 监听 80 端口
        listen 80;

        # 定义 /admin 路径的处理方式
        location /admin {
            # 代理请求到上游服务器 admin
            proxy_pass http://admin;
            # 设置代理请求头，保留客户端的主机名
            proxy_set_header Host $host;
            # 设置代理请求头，保留客户端的 IP 地址
            proxy_set_header X-Real-IP $remote_addr;
            # 设置代理请求头，保留客户端的 X-Forwarded-For 头
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # 设置代理请求头，保留客户端的请求协议
            proxy_set_header X-Forwarded-Proto $scheme;
            # 重写请求路径，去掉 /admin 前缀
            rewrite ^/admin/(.*) /$1 break;
        }

        # 定义 /api 路径的处理方式
        location /api {
            # 代理请求到上游服务器 server
            proxy_pass http://server;
            # 设置代理请求头，保留客户端的主机名
            proxy_set_header Host $host;
            # 设置代理请求头，保留客户端的 IP 地址
            proxy_set_header X-Real-IP $remote_addr;
            # 设置代理请求头，保留客户端的 X-Forwarded-For 头
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # 设置代理请求头，保留客户端的请求协议
            proxy_set_header X-Forwarded-Proto $scheme;
            # 重写请求路径，去掉 /api 前缀
            rewrite ^/api/(.*) /$1 break;
        }
    }
}
